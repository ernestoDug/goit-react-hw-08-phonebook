{"version":3,"file":"static/js/15.ec6ec34a.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.1\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.1\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","canHandoff","window","HandoffAppearAnimations","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","noop","any","stepsOrder","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","push","cancel","index","splice","delete","process","frameData","createRenderStep","processStep","stepId","processBatch","performance","now","wake","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","frame","cancelFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","arguments","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","animateMotionValue","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","collectMotionValues","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","string","navigator","userAgent","roundPoint","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","ProjectionNode","splitCSSVariableRegex","parseCSSVariable","exec","getVariableValue","fallback","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","object","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","apply","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}