{"version":3,"file":"static/js/710.af1e3420.chunk.js","mappings":"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","sources":["redux/selectors/selectors.js","components/ContactForm/FormStyle.module.jsx","components/ButtonSbmt/ButtonStyle.module.jsx","components/ButtonSbmt/ButtonSbmt.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.module.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.module.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactsListStyle.module.jsx","components/CounterContacts/CounterContacts.module.jsx","components/CounterContacts/CounterContacts.jsx","components/ContactList/ContactList.jsx","Pages/Contacts/Contacts.module.jsx","components/Modal/Modal.module.jsx","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","components/Modal/Modal.jsx","Pages/Contacts/Contacts.jsx","components/Section/Section.module.jsx","components/Section/Section.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContactsFilter = state => state.filters;\n","import styled from '@emotion/styled';\n\n// форма\nexport const BodyStyle = styled.section`\n  background: #74500c;\n  border-radius: 20px/60px;\n  border: 2px dashed #ffb841;\n`;\n// форма\nexport const FormStyle = styled.form`\n  display: flex;\n  background-image: url('https://img.freepik.com/free-vector/jeans-texture-background_1053-120.jpg?w=740&t=st=1692460341~exp=1692460941~hmac=8328fc0d4ee8de30fcace9f0f45c61ac624d184733abdaa77901038d0c682448');\n  border-radius: 20px/60px;\n  box-shadow: 10px 10px 10px 2px rgba(34, 60, 80, 0.2) inset,\n    10px 10px 10px 2px rgba(34, 60, 80, 0.2);\n  width: 800px;\n  justify-content: space-around;\n  padding: 12px 7px;\n`;\n\n// лабель\nexport const LabelStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  margin-top: 9px;\n  margin-left: 7px;\n  font-weight: 600;\n  color: #ebeff6;\n  padding-left: 10px;\n  font-style: italic;\n  border-bottom: none;\n  border-radius: 20px/60px;\n  margin: 5px;\n`;\n\n// інпуть\nexport const InputStyle = styled.input`\n  border-radius: 20px/60px;\n  width: 200px;\n  padding: 22px 36px;\n  color: #262fd4;\n  background: linear-gradient(\n    90deg,\n    #9dbce6 31%,\n    rgba(160, 211, 241, 1) 66%,\n    rgba(68, 159, 214, 1) 100%\n  );\n  margin-right: 7px;\n  margin-bottom: 7px;\n\n  :placeholder {\n    color: #314286;\n  }\n  &:hover,\n  &:focus {\n    background: linear-gradient(90deg, #dd90e5 31%, #4ba6da 66%, #2b89c3 100%);\n  }\n`;\n","import styled from '@emotion/styled';\n\n// кнопка\nexport const ButtonStyle = styled.button`\n  display: flex;\n  font-size: 16px;\n  font-weight: 700;\n  align-items: center;\n  margin: 15px 5px;\n  color: #f7e32d;\n  padding: 9px;\n  background-image: url('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSXq-y8Yv0QvBh-kGT1LOtxiOxN1FRnb4-3gA&usqp=CAU');\n  box-shadow: 10px 10px 10px 2px rgba(34, 60, 80, 0.2) inset,\n    10px 10px 10px 2px rgba(34, 60, 80, 0.2);\n  border: 1px solid rgba(250, 187, 24, 0.1);\n  border-radius: 20px/60px;\n  cursor: pointer;\n  border: 2px dashed #ffb841;\n\n  transition: background-color 200ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 200ms cubic-bezier(0.6, 0, 0.4, 1);\n  transition: border 200ms cubic-bezier(0.6, 0, 0.4, 1);\n  transition: transform 200ms cubic-bezier(0.6, 0, 0.4, 1);\n\n  :hover,\n  :focus {\n    color: #a2e2f3;\n    border: 2px dashed #e3620c;\n    transform: scale(1.1);\n    background-image: none;\n    background-color: green;\n  }\n`;\n","import { ButtonStyle } from \"./ButtonStyle.module\";\n\n\nconst ButtonSbmt = () => {\n    return (\n      <ButtonStyle  type=\"submit\">\n        Додати контакт🎸{' '}\n      </ButtonStyle>\n    );\n  };\n  \n  export default ButtonSbmt;","import { useSelector, useDispatch } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport { selectContacts } from 'redux/selectors/selectors';\nimport { addContact } from 'redux/operations';\n\nimport { FormStyle, LabelStyled, InputStyle, BodyStyle } from './FormStyle.module';\nimport ButtonSbmt from 'components/ButtonSbmt/ButtonSbmt';\n\nimport { ToastContainer } from 'react-toastify';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const ContactForm = ({ onCloseModal }) => {\n \n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n// відправник\n  const Submiter = event => {\n    event.preventDefault();\n    const form = event.target;\n    const formName = event.target.elements.name.value;\n    const formNumber = event.target.elements.number.value;\n    if (contacts.some(({ name }) => name === formName)) {\n      toast.warn(`🥁 Уважніше, ${formName}  вже Є в конТАКтах 🥁`);\n    }\n// console.log(formNumber, formNumber);\n    dispatch(addContact({ name: formName, number: formNumber.toString() }))\n      .unwrap()\n      .then(originalPromiseResult => {\n        toast.success(\n          `🥁${originalPromiseResult.name} тепер в контактах🥁`\n        );\n      })\n      .catch(() => {\n        toast.warn(`⛔Спробуйте ще, сталася помилка⛔`);\n      });\n\n    onCloseModal();\n    form.reset();\n  };\n\n  return (\n    <>\n      <ToastContainer\n        position=\"top-left\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"colored\"\n      />\n    \n      <FormStyle onSubmit={Submiter} autoComplete=\"off\">\n      <BodyStyle>\n        <LabelStyled>\n          Ім'я 📌\n          <InputStyle\n            type=\"text\"\n            name=\"name\"\n            // pattern= \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            //  так чомусь помилка в консолі\n            title=\"Ім'я може містити лише літери, апостроф, тире та пробіли. Наприклад Адріан, Джейкоб Мерсер, Шарль де Бац де Кастельмор д'Артаньян\"\n            required\n            placeholder=\"Введіть ім'я...\"\n            value={contacts.name}\n          />\n        </LabelStyled>\n        </BodyStyle>\n\n        <BodyStyle>\n        <LabelStyled>\n          Номер 📞\n          <InputStyle\n            type=\"tel\"\n            name=\"number\"\n            // pattern= \"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            // i так чомусь помилка в консолі\n            title=\"Номер телефону має складатися з цифр і може містити пробіли, тире, круглі дужки та починатися з +\"\n            placeholder=\"Введіть номер телефону...\"\n            value={contacts.number}\n          />\n        </LabelStyled>\n        </BodyStyle>\n        <ButtonSbmt  />\n      </FormStyle>\n    </>\n  );\n};\n\nContactForm.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\n\nexport const BodyStyle = styled.section`\nbackground: #74500c;\nborder-radius: 20px/60px;\nborder: 2px dashed #ffb841;\n`;\n// лабель\nexport const LabelStyle = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  margin-top: 9px;\n  margin-left: 7px;\n  font-weight: 600;\n  color: #ebeff6;\n  padding-left: 10px;\n  font-style: italic;\n  border: 2px dashed #ffb841;\n  border-radius: 20px/60px;\n  margin-bottom: 7px;\n  margin-right: 7px;\n`;\n\n\nexport const InputStyle = styled.input`\n  border-radius: 20px/60px;\n  width: 250px;\n  padding: 22px 36px;\n  color: #262fd4;\n  background: linear-gradient(\n    90deg,\n    #9dbce6 31%,\n    rgba(160, 211, 241, 1) 66%,\n    rgba(68, 159, 214, 1) 100%\n  );\n  margin: 5px;\n  margin-right: 15px;\n  border-style: none;\n\n  :placeholder {\n    color: #314286;\n  }\n  &:hover, \n  &:focus{\n   background: linear-gradient(\n    90deg,\n    #dd90e5 31%,\n    #4ba6da 66%,\n    #2b89c3 100%\n   )\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { setContactsFilter } from 'redux/slice/filtersSlice';\nimport { selectContactsFilter } from 'redux/selectors/selectors';\n\nimport { LabelStyle, InputStyle, BodyStyle } from './Filter.module';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  const handleChangeFilter = ({ currentTarget: { value } }) => {\n    const normalizedValue = value.toLowerCase().trim();\n    dispatch(setContactsFilter(normalizedValue));\n  };\n\n  return (\n    <BodyStyle>\n    <LabelStyle>\n      <InputStyle\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter contact name\"\n        value={filter}\n        onChange={handleChangeFilter}\n      />\n    </LabelStyle>\n    </BodyStyle>\n  );\n};\n","import styled from '@emotion/styled';\n\n\nexport const ContactItemStyle = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 6px;\n\n  padding: 20px 20px;\n\n  border-radius: 24px;\n  border: 1px solid rgba(0, 0, 0, 0.04);\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n`;\n\nexport const ContactNameStyle = styled.p`\n  display: flex;\n  align-items: center;\n  color: #f4e8ac;\n  font-size: 16px;\n  background-color: #c38e2a;\n  border: 2px dashed #ffb841;\n  margin: 0;\n  font-weight: 500;\n  border-radius: 20px/60px;\n  padding: 7px;\n\n`;\n\nexport const ContactNumberStyle = styled.p`\n display: flex;\n  align-items: center;\n  color: #665813;\n  font-size: 14px;\n  background-color: #e2b96d;\n  border: 2px dashed #ffb841;\n  margin: 0;\n  font-weight: 500;\n  border-radius: 20px/60px;\n  padding: 7px;\n`;\n\n\n\n\n\n\nexport const ButtonStyle = styled.button`\n  display: flex;\n  font-size: 16px;\n  font-weight: 500;\n  align-items: center;\n  margin: 15px 5px;\n  color: #f7e32d;\n  padding: 5px;\nbackground-color: #74500c;\n\n  box-shadow: 10px 10px 10px 2px rgba(34, 60, 80, 0.2) inset,\n    10px 10px 10px 2px rgba(34, 60, 80, 0.2);\n  border: 1px solid rgba(250, 187, 24, 0.1);\n  border-radius: 20px/60px;\n  cursor: pointer;\n  border: 2px dashed #ffb841;\n\n  transition: background-color 200ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 200ms cubic-bezier(0.6, 0, 0.4, 1);\n  transition: border 200ms cubic-bezier(0.6, 0, 0.4, 1);\n  transition: transform 200ms cubic-bezier(0.6, 0, 0.4, 1);\n\n  :hover,\n  :focus {\n    color: #a2e2f3;\n    border: 2px dashed #e3620c;\n    transform: scale(1.1);\n    background-image: none;\n    background-color: #e11212;\n  }\n`;\n\n\n\nexport const Button = styled.button`\n  font-weight: 700;\n\n  display: flex;\n  align-items: center;\n  gap: 14px;\n\n  padding: 0.563em 1em;\n  background-color: #000000;\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(250, 187, 24, 0.1);\n  border-radius: 8px;\n\n  cursor: pointer;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #000000;\n    background-color: rgba(250, 187, 24, 0.1);\n    border: 1px solid #000000;\n\n    > svg {\n      fill: #000000;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { deleteContact } from 'redux/operations';\n\nimport {\n  ContactItemStyle,\n  ContactNameStyle,\n  ContactNumberStyle,\n  ButtonStyle,\n  } from './ContactListItem.module';\n\n// import { Notify } from 'notiflix';\n\nexport const ContactsListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = userId => {\n    dispatch(deleteContact(userId))\n      .unwrap()\n      .then(originalPromiseResult => {\n        return toast.success(\n          `🥁${originalPromiseResult.name} тепер видалено`\n        );\n      })\n      .catch(() => {\n        toast.warn(`⛔Спробуйте ще, сталася помилка ⛔`);\n      }\n      );\n  };\n\n  return (\n    <> \n    <ToastContainer\n    position=\"top-left\"\n    autoClose={2000}\n    hideProgressBar={false}\n    newestOnTop={false}\n    closeOnClick\n    rtl={false}\n    pauseOnFocusLoss\n    draggable\n    pauseOnHover\n    theme=\"colored\"\n  />\n    <ContactItemStyle key={id}>\n      <ContactNameStyle>\n        {/* <UserIcon /> */}\n        📕{name}\n      </ContactNameStyle>\n      <ContactNumberStyle>\n      ☎️{number}\n      </ContactNumberStyle>\n      <ButtonStyle onClick={() => handleDeleteContact(id)}>\n        {/* <UserDeletedIcon /> */}\n        Видалити♻️\n      </ButtonStyle>\n    </ContactItemStyle>\n    </>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsListStyle = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  background-image: url('https://envato-shoebox-0.imgix.net/twenty20/production/uploads/items/dfa2b296-87db-4e5f-9722-1c5a3c1721ed/source?auto=compress%2Cformat&fit=max&mark=https%3A%2F%2Felements-assets.envato.com%2Fstatic%2Fwatermark2.png&markalign=center%2Cmiddle&markalpha=18&w=700&s=9170463252986b38ebaf7554e22850ea');\n  border-radius: 20px/60px;\n  box-shadow: 10px 10px 10px 2px rgba(34, 60, 80, 0.2) inset,\n    10px 10px 10px 2px rgba(34, 60, 80, 0.2);\n  border: 2px dashed #ffb841;\n`;\n","import styled from '@emotion/styled';\n\n// форма\nexport const CounterContactsStyle = styled.p`\n  font-size: 20px;\n  padding: 9px;\n  transform: rotate(-15deg);\n  margin-left: -20px;\n  margin-bottom: -40px;\n  font-weight: 800px;\n  font-family: Georgia, 'Times New Roman', Times, serif;\n  color: #e7f1e3;\n  display: inline-block;\n  width: 200px;\n  text-align: center;\n  background-image: url('https://bogatyr.club/uploads/posts/2023-06/1688104468_bogatyr-club-p-kozhanaya-zaplatka-foni-pinterest-37.jpg');\n  background-size: contain;\n  border-radius: 20px/60px;\n  border: 2px dashed #ffb841;\n`;\n","import { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { selectContacts } from 'redux/selectors/selectors';\nimport { CounterContactsStyle } from 'components/CounterContacts/CounterContacts.module';\n\nconst CounterContacts = () => {\n  const contacts = useSelector(selectContacts);\n  // const loading = useSelector(selectIsLoading);\n\n  return (\n    <>\n      <CounterContactsStyle>\n        {' '}\n        📝Контактів в книзі: {contacts.length}{' '}\n      </CounterContactsStyle>\n      {/* {loading === true && <p className=\"loading\">🚧Завантажую🚚...</p>} */}\n    </>\n  );\n};\n\nexport default CounterContacts;\n","import { useSelector } from 'react-redux';\n\nimport {\n  selectContactsFilter,\n  selectContacts,\n} from 'redux/selectors/selectors';\n\nimport { ContactsListItem } from '../ContactListItem/ContactListItem';\n\nimport { ContactsListStyle } from './ContactsListStyle.module';\nimport CounterContacts from 'components/CounterContacts/CounterContacts';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectContactsFilter);\n  const filtrat = [\n    ...contacts.filter(contact => contact.name.toLowerCase().includes(filter)),\n  ];\n\n  return (\n    <> \n    \n    <CounterContacts/>\n    <ContactsListStyle>\n      {filtrat.map(({ name, number, id }) => (\n        <ContactsListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ContactsListStyle>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n// ДІВЧИК 1\nexport const WpapStyle = styled.div`\n  padding: 35px 50px;\n`;\n// ДІВЧИК 2\nexport const NavStyle = styled.div`\n  display: flex;\n  align-items: center;\n`;\n// ДІВЧИК 3\nexport const FiltrWrStyle = styled.div`\n  display: flex;\n  margin-left: auto;\n`;\n\n// ЗАГОЛОВОК\nexport const TitleStyle = styled.h2`\n  font-weight: 800;\n  color: #444e7b;\n  margin: 0;\n  text-shadow: 2px 2px 2px #c48e06, 0 2px 2px #eee425, -2px 0 2px #ebe413,\n    0 -2px 2px #ead955, 3px 3px 2px #e6db0e, 0 3px 2px #8c1b21,\n    -3px 0 2px #dcca30, 0 -3px 2px #8c1b21, 4px 4px 2px #8c1b21,\n    0 4px 2px #f6db6d, -4px 0 2px #dcb424, 0 -4px 2px #8c1b21;\n`;\n\nexport const FormStyle = styled.form``;\n\nexport const LabelStyle = styled.label``;\n\nexport const InputStyle = styled.input``;\n\nexport const ButtonStyle = styled.button`\n  display: flex;\n  font-size: 18px;\n  font-weight: 700;\n  align-items: center;\n  font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\n  padding: 10px;\n  color: #ce9612;\n  text-shadow: 2px 2px 2px #f0f0f0, 0 2px 2px #eee425, -2px 0 2px #ebe413,\n    0 -2px 2px #f4f4ee, 3px 3px 2px #e6db0e, 0 3px 2px #8c1b21,\n    -3px 0 2px #dcca30, 0 -3px 2px #e7d4d5, 4px 4px 2px #8c1b21,\n    0 4px 2px #f6db6d, -4px 0 2px #dcb424, 0 -4px 2px #8c1b21;\n\n  background: radial-gradient(\n    circle,\n    rgba(233, 179, 38, 1) 27%,\n    #5e5331 64%,\n    #dcbc6a 100%\n  );\n  margin-left: 15px;\n  box-shadow: 10px 10px 10px 2px rgba(34, 60, 80, 0.2) inset,\n    10px 10px 10px 2px rgba(34, 60, 80, 0.2);\n  width: 100px;\n  border-radius: 80px/80px;\n  cursor: pointer;\n\n  transition: background-color 200ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 200ms cubic-bezier(0.6, 0, 0.4, 1);\n  transition: transform 200ms cubic-bezier(0.6, 0, 0.4, 1);\n  :hover,\n  :focus {\n    text-shadow: none;\n    color: #533505;\n    background-image: none;\n    background: linear-gradient(90deg, #b6a013 31%, #ecec08 60%, #dfa909 100%);\n    transform: scale(1.1);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const OverlayStyle = styled.div`\n  position: fixed;\n  display: flex;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n  background: radial-gradient(\n    circle,\n    rgba(60, 119, 204, 0.8) 27%,\n    rgba(160, 211, 241, 0.8) 64%,\n    rgba(68, 159, 214, 0.8) 100%\n  );\n  z-index: 666;\n`;\n\nexport const ContentStyle = styled.div`\n  border-radius: 20px/60px;\n  overflow: hidden;\n  padding-left: 30px;\n  padding-right: 30px;\n   z-index: 666;\n`;\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                allChildren.delete(key);\n                exitingChildren.delete(key);\n                // Remove this child from the present children\n                const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n                presentChildren.current.splice(removeIndex, 1);\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    presentChildren.current = filteredChildren;\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { OverlayStyle, ContentStyle } from './Modal.module';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nexport const Modal = ({ children, onCloseModal }) => {\n  // на закриття\n  const clicker = ({ target, currentTarget }) => {\n    if (currentTarget === target) {\n      onCloseModal();\n    }\n  };\n\n  // по іскейпу\n  useEffect(() => {\n    const keyClicker = event => {\n      if (event.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n    // слухаю клаву\n    window.addEventListener('keydown', keyClicker);\n    // не слухаю\n    return () => {\n      window.removeEventListener('keydown', keyClicker);\n    };\n  }, [onCloseModal]);\n\n  return (\n    <OverlayStyle onClick={clicker}>\n        <AnimatePresence>\n        <motion.div\n          exit={{ x: -300, opacity: 0 }}\n          key={ContentStyle}\n          className=\"box\"\n          initial={{ opacity: 0, scale: 0.5 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{\n            duration: 0.8,\n            delay: 0.5,\n            ease: [0, 0.71, 0.2, 1.01],\n          }}\n        >\n          <ContentStyle>{children}</ContentStyle>\n        </motion.div>\n    </AnimatePresence>\n      </OverlayStyle>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onCloseModal: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { motion } from \"framer-motion\";\n\n\nimport { fetchContacts } from 'redux/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors/selectors';\n\nimport { Section } from '../../components/Section/Section';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport {\n  // AddUserIcon,\n  ButtonStyle,\n  WpapStyle,\n  NavStyle,\n  FiltrWrStyle,\n  TitleStyle,\n} from './Contacts.module';\nimport { Modal } from 'components/Modal/Modal';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [isShowModalAddUser, setIsShowModalAddUser] = useState(false);\n\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleOpenModal = () => {\n    setIsShowModalAddUser(prev => !prev);\n  };\n\n  return (\n    <motion.div\n    className=\"box\"\n      initial={{ opacity: 0, scale: 0.5 }}\n      animate={{ opacity: 1, scale: 1 }}\n      transition={{\n        duration: 0.8,\n        delay: 0.5,\n        ease: [0, 0.71, 0.2, 1.01]\n      }}\n    > \n    <WpapStyle>\n        {isLoading && !error && <b>🚛Завантажую...🚧</b>}\n      <Section key={Section}>\n        <NavStyle>\n          <TitleStyle>Контакти 📑</TitleStyle>\n          <FiltrWrStyle>\n            <Filter/>\n            <ButtonStyle type=\"button\" onClick={handleOpenModal}>\n                 Новий контакт ⭐\n            </ButtonStyle>\n          </FiltrWrStyle>\n        </NavStyle>\n        <ContactList />\n      </Section>\n      {isShowModalAddUser && (\n        \n        <Modal\n          children={\n            <Section title=\"Додати контакт\">\n              <ContactForm onCloseModal={handleOpenModal} />\n            </Section>\n          }\n          onCloseModal={handleOpenModal}\n        ></Modal>\n      )}\n    </WpapStyle>\n    </motion.div>\n  );\n};\n\nexport default Contacts;\n","import styled from '@emotion/styled';\n\n\n// секція\nexport const SectionWrStyle = styled.section`\n  margin: auto;\n  padding: 15px 15px;\n  border-radius: 20px/60px;\n  box-shadow: 10px 10px 10px 2px rgba(34, 60, 80, 0.2) inset,\n    10px 10px 10px 2px rgba(34, 60, 80, 0.2);\n  background-image: url('https://img4.cliparto.com/pic/xl/186155/6359708-jeans-torn-denim-texture.jpg');\n  border: 2px dashed #ffb841;\n\n`;\n\n\nexport const TitleStyle = styled.h2`\n  font-weight: 800;\n  font-size: 40px;\n  color: #e3dcea;\n  letter-spacing: 5px;\n  text-shadow: 7px 1px 2px rgba(30, 128, 161, 0.5);\n  font-family: Oswald;\n;\n\n  text-align: center;\n  margin: 0;\n`;\n","import PropTypes from 'prop-types';\n\nimport { SectionWrStyle, TitleStyle } from './Section.module';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionWrStyle>\n      {title && <TitleStyle>{title}</TitleStyle>}\n      {children}\n    </SectionWrStyle>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","BodyStyle","styled","FormStyle","LabelStyled","InputStyle","ButtonStyle","type","ContactForm","onCloseModal","dispatch","useDispatch","useSelector","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","onSubmit","event","preventDefault","form","target","formName","elements","name","value","formNumber","number","some","toast","addContact","toString","unwrap","then","originalPromiseResult","catch","reset","autoComplete","title","required","placeholder","LabelStyle","Filter","filter","onChange","normalizedValue","currentTarget","toLowerCase","trim","setContactsFilter","ContactItemStyle","ContactNameStyle","ContactNumberStyle","ContactsListItem","id","onClick","userId","deleteContact","ContactsListStyle","CounterContactsStyle","length","ContactList","filtrat","contact","includes","map","WpapStyle","NavStyle","FiltrWrStyle","TitleStyle","OverlayStyle","ContentStyle","useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","React","PopChild","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","values","register","delete","undefined","forEach","_","key","PresenceContext","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","invariant","callback","forceRender","useContext","LayoutGroupContext","useState","forcedRenderCount","setForcedRenderCount","useCallback","frame","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","updateChildLookup","clear","useEffect","presentKeys","targetKeys","numPresent","i","indexOf","has","component","get","insertionIndex","exitingComponent","removeIndex","findIndex","presentChild","splice","cloneElement","Modal","keyClicker","code","window","addEventListener","removeEventListener","motion","exit","x","opacity","className","scale","animate","transition","duration","delay","ease","isShowModalAddUser","setIsShowModalAddUser","fetchContacts","handleOpenModal","prev","Section","SectionWrStyle"],"sourceRoot":""}